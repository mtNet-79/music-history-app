"""empty message

Revision ID: bcd974a0981f
Revises: 
Create Date: 2023-02-11 13:41:31.300018

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bcd974a0981f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('performers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('title', sa.String(length=250), nullable=True),
    sa.Column('years', sqlalchemy_utils.types.range.IntRangeType(), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('years', sqlalchemy_utils.types.range.IntRangeType(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('styles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('composers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('years', sqlalchemy_utils.types.range.IntRangeType(), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('period_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['period_id'], ['periods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('performer_style',
    sa.Column('performers_id', sa.Integer(), nullable=False),
    sa.Column('style_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['performers_id'], ['performers.id'], ),
    sa.ForeignKeyConstraint(['style_id'], ['styles.id'], ),
    sa.PrimaryKeyConstraint('performers_id', 'style_id')
    )
    op.create_table('recordings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('performer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['performer_id'], ['performers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('composer_performer',
    sa.Column('composer_id', sa.Integer(), nullable=False),
    sa.Column('performer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['composer_id'], ['composers.id'], ),
    sa.ForeignKeyConstraint(['performer_id'], ['performers.id'], ),
    sa.PrimaryKeyConstraint('composer_id', 'performer_id')
    )
    op.create_table('composer_style',
    sa.Column('composer_id', sa.Integer(), nullable=False),
    sa.Column('style_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['composer_id'], ['composers.id'], ),
    sa.ForeignKeyConstraint(['style_id'], ['styles.id'], ),
    sa.PrimaryKeyConstraint('composer_id', 'style_id')
    )
    op.create_table('compositions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('composer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['composer_id'], ['composers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contemporaries',
    sa.Column('composer_id', sa.Integer(), nullable=False),
    sa.Column('contemporary_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['composer_id'], ['composers.id'], ),
    sa.ForeignKeyConstraint(['contemporary_id'], ['composers.id'], ),
    sa.PrimaryKeyConstraint('composer_id', 'contemporary_id'),
    sa.UniqueConstraint('composer_id', 'contemporary_id', name='unique_contemporaries')
    )
    with op.batch_alter_table('contemporaries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_contemporaries_composer_id'), ['composer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_contemporaries_contemporary_id'), ['contemporary_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('contemporaries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_contemporaries_contemporary_id'))
        batch_op.drop_index(batch_op.f('ix_contemporaries_composer_id'))

    op.drop_table('contemporaries')
    op.drop_table('compositions')
    op.drop_table('composer_style')
    op.drop_table('composer_performer')
    op.drop_table('recordings')
    op.drop_table('performer_style')
    op.drop_table('composers')
    op.drop_table('styles')
    op.drop_table('periods')
    op.drop_table('performers')
    # ### end Alembic commands ###
